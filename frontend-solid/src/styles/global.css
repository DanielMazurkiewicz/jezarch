/* src/styles/global.css */

/* Base styles using theme variables */
html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  font-family: var(--font-body);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
  height: 100%; /* Ensure html takes full height */
  color-scheme: light; /* Default to light */
}

html.dark {
    color-scheme: dark; /* Set color scheme for dark mode */
}


body {
  min-height: 100%; /* Use minHeight 100% instead of 100vh for better compatibility */
  height: 100%; /* Ensure body takes full height */
  margin: 0;
  background-color: var(--color-background);
  color: var(--color-foreground);
  font-family: var(--font-body);
  position: relative; /* Needed for pseudo-element */
  min-width: 320px;
}

#root { /* Target root element */
    height: 100%;
    min-height: 100%;
    display: flex;
    flex-direction: column;
}


*, *::before, *::after {
  box-sizing: inherit;
}

/* Basic reset for margins and paddings (optional, adjust as needed) */
h1, h2, h3, h4, h5, h6, p, ul, ol, blockquote, figure, fieldset {
  margin: 0;
  padding: 0;
}

ul, ol {
  list-style: none;
}

a {
  color: inherit;
  text-decoration: inherit;
}

button, input, select, textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    color: inherit;
    margin: 0;
    padding: 0;
    border: none;
    background-color: transparent;
}

button {
    cursor: pointer;
    text-align: left; /* Default alignment */
}

label {
    cursor: default;
}

input, textarea, select, button { /* Ensure form elements don't exceed container */
    max-width: 100%;
}

img, svg, video, canvas, audio, iframe, embed, object { /* Make media responsive */
    display: block;
    max-width: 100%;
    height: auto;
}

/* --- Keyframes & Animations --- */
@keyframes slide {
  0% { background-position: 0 0; }
  100% { background-position: 256px 224px; }
}
@keyframes spin {
  from { transform: rotate(0deg); }
  to   { transform: rotate(360deg); }
}


body::before {
  content: '';
  position: fixed;
  inset: 0;
  z-index: -1;
  opacity: 0.03;
  /* TODO: Uncomment if logo.svg exists in public */
  /* background-image: url('/logo.svg'); */
  background-repeat: repeat;
  background-size: 256px;
  transform: rotate(-12deg) scale(1.35);
  animation: slide 30s linear infinite; /* Animation can be disabled */
  pointer-events: none;
}


/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto !important;
  }
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    transition: none !important; /* Add this */
  }
}

/* Add styles for common utility classes if desired */
.text-primary { color: var(--color-primary); }
.text-destructive { color: hsl(var(--destructive)); }
.text-muted-foreground { color: var(--color-muted-foreground); }
.text-center { text-align: center; }
.font-medium { font-weight: var(--fontWeight-medium); }
.font-semibold { font-weight: var(--fontWeight-semibold); }
.font-mono { font-family: var(--font-mono); }
.italic { font-style: italic; }
.flex { display: flex; }
.inline-flex { display: inline-flex; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }
.space-y-1 > :not([hidden]) ~ :not([hidden]) { margin-top: var(--spacing-xs); }
.space-y-4 > :not([hidden]) ~ :not([hidden]) { margin-top: var(--spacing-md); }
.p-4 { padding: var(--spacing-md); }
.p-10 { padding: var(--spacing-xl); padding-bottom: var(--spacing-xl); } /* Adjust padding */
.py-6 { padding-top: var(--spacing-lg); padding-bottom: var(--spacing-lg); }
.py-10 { padding-top: var(--spacing-2xl); padding-bottom: var(--spacing-2xl); }
.gap-sm { gap: var(--spacing-sm); }
.flex-grow { flex-grow: 1; }
.animate-spin { animation: spin 1s linear infinite; } /* Added spin animation */