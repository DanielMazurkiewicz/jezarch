/* src/components/archive/DocumentForm.module.css */
.documentFormContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg); /* Space between card sections */
    position: relative; /* For overlay */
    /* Scrolling handled by DialogBody */
}

/* Reusable style for the form cards */
.formSectionCard {
    /* Inherits Card styles */
    padding-top: var(--spacing-md);
    padding-bottom: var(--spacing-md);
}

.formSectionHeader {
    padding-left: var(--spacing-lg);
    padding-right: var(--spacing-lg);
    margin-bottom: var(--spacing-md); /* Space below header */
}

.formSectionTitle {
    font-size: var(--fontSize-lg);
    font-weight: var(--fontWeight-semibold);
}

.formSectionContent {
    display: grid;
    gap: var(--spacing-md) var(--spacing-sm); /* row-gap column-gap */
    padding-left: var(--spacing-lg);
    padding-right: var(--spacing-lg);
}
/* Responsive grid */
@media (min-width: 768px) { /* md breakpoint */
    .formSectionContent {
        grid-template-columns: repeat(2, minmax(0, 1fr)); /* 2 columns on medium+ */
        gap: var(--spacing-md) var(--spacing-md); /* Adjust gap if needed */
    }
}
@media (max-width: 767px) {
    .formSectionContent {
        grid-template-columns: repeat(1, minmax(0, 1fr)); /* 1 column on mobile */
        gap: var(--spacing-sm); /* Reduce gap on mobile */
    }
}

/* Style to make a grid item span both columns */
.gridSpanFull {
    grid-column: span 1 / span 1; /* Default span 1 */
}
@media (min-width: 768px) {
    .gridSpanFull {
        grid-column: span 2 / span 2; /* Span 2 columns on medium+ */
    }
}

/* Reusable form group style */
.formGroup {
    display: grid;
    gap: var(--spacing-xs);
}

/* Style for the checkbox group */
.checkboxGroup {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    padding-top: var(--spacing-xs); /* Adjust vertical alignment/spacing */
    /* composes: gridSpanFull; Apply column span style - use cn() instead */
}

.checkboxLabel { /* Copied from NoteEditor */
    font-weight: var(--fontWeight-normal);
    cursor: pointer;
    user-select: none;
}
/* Consider adding disabled style for label */
.checkboxGroup > label:has(+ [disabled]),
.checkboxGroup > label:has(+ [aria-disabled="true"]) {
    opacity: 0.7;
    cursor: not-allowed;
}


/* Error message style */
.errorMessage { /* Copied from TagForm */
    font-size: var(--fontSize-xs);
    color: hsl(var(--destructive));
    font-weight: var(--fontWeight-medium);
    margin-top: 2px;
}

/* Actions area at the bottom */
.formActions {
    display: flex;
    justify-content: flex-start; /* Align button left */
    padding-left: var(--spacing-lg);
    padding-right: var(--spacing-lg);
    padding-top: var(--spacing-sm); /* Space above button */
    margin-top: var(--spacing-md); /* Space above the actions area */
}

/* Loading overlay */
.loadingOverlay { /* Copied from TagForm */
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: hsl(var(--background) / 0.5);
    border-radius: var(--radius-md);
    z-index: 10;
}

/* Style for disabled Parent Unit input */
.disabledParentInput {
    color: var(--color-muted-foreground);
    /* Input component handles disabled style */
}

.iconMargin {
    margin-right: 0.5rem;
}
