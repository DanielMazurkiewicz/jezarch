/* src/components/shared/SearchBar.module.css */
.searchBarContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    padding: var(--spacing-md);
    border-radius: var(--radius-lg);
    border: var(--borderWidth-sm) solid var(--color-border);
    background-color: var(--color-card);
    /* box-shadow: var(--shadow-sm); Optional */
}

.criteriaRow {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end; /* Align bottoms */
    gap: var(--spacing-sm);
    padding: var(--spacing-sm);
    border-radius: var(--radius-md);
}

/* Base styles for input wrappers */
.inputWrapperBase {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    flex-grow: 1;
    min-width: 120px;
}

/* Specific min-widths */
.fieldSelectWrapper { composes: inputWrapperBase; min-width: 150px; }
.conditionSelectWrapper { composes: inputWrapperBase; min-width: 120px; }
.valueInputWrapper { composes: inputWrapperBase; min-width: 180px; }

/* 'NOT' checkbox group */
.notToggleWrapper {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding-bottom: 2px; /* Align baseline (tweak) */
    height: 36px; /* Match input height */
    flex-shrink: 0;
    align-self: flex-end;
}

/* Label style within the row */
.criteriaLabel {
    font-size: var(--fontSize-xs);
    font-weight: var(--fontWeight-medium);
    color: var(--color-muted-foreground);
}

/* Remove button style */
.removeButton {
    flex-shrink: 0;
    align-self: flex-end;
    margin-bottom: 0;
    color: var(--color-muted-foreground);
    /* Inherits Button component styles */
}
.removeButton:hover:not(:disabled) {
    color: hsl(var(--destructive));
}

/* Actions container */
.actionsContainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-sm);
    padding-top: var(--spacing-sm);
    border-top: var(--borderWidth-sm) solid var(--color-border);
    margin-top: var(--spacing-sm);
}

.addFilterButton {
    /* Base button styles applied by component */
}

.searchActionsGroup {
    display: flex;
    gap: var(--spacing-sm);
}

/* Utility Classes */
.iconMargin {
    margin-right: 0.5rem;
}
.animateSpin {
    animation: spin 1s linear infinite; /* Reusing spin from LoadingSpinner */
}